{"ast":null,"code":"import { catchError, delay } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RoomsService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get('https://localhost:7112/api/Roomsssssssss').pipe(delay(2000), catchError(this.errorHandler));\n  }\n  errorHandler(error) {\n    return throwError(() => error.message);\n  }\n  static #_ = this.ɵfac = function RoomsService_Factory(t) {\n    return new (t || RoomsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RoomsService,\n    factory: RoomsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","delay","RoomsService","constructor","http","getAll","get","pipe","errorHandler","error","throwError","message","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/macbook/App/repos/HiRes/Client/src/app/services/rooms.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {HttpClient, HttpErrorResponse, HttpParams} from \"@angular/common/http\";\nimport {catchError, delay, Observable} from \"rxjs\";\nimport {IRoom} from \"../models/room\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomsService {\n  constructor(private http: HttpClient) {\n  }\n\n  getAll(): Observable<IRoom[]>{\n    return this.http.get<IRoom[]>('https://localhost:7112/api/Roomsssssssss')\n      .pipe(\n        delay(2000),\n        catchError(this.errorHandler)\n      )\n  }\n\n  private errorHandler(error: HttpErrorResponse){\n    return throwError(() => error.message)\n  }\n\n  // queryStringExample1(): Observable<IRoom[]>{\n  //   return this.http.get<IRoom[]>('https://localhost:7112/api/Room', {\n  //     params: new HttpParams().append('limit', 5)\n  //   })\n  // }\n  // queryStringExample2(): Observable<IRoom[]>{\n  //   return this.http.get<IRoom[]>('https://localhost:7112/api/Room', {\n  //     params: new HttpParams({\n  //       fromString: 'limit=5'\n  //     })\n  //   })\n  // }\n  // queryStringExample3(): Observable<IRoom[]>{\n  //   return this.http.get<IRoom[]>('https://localhost:7112/api/Room', {\n  //     params: new HttpParams({\n  //       fromObject: {limit: 5}\n  //     })\n  //   })\n  // }\n}\n"],"mappings":"AAEA,SAAQA,UAAU,EAAEC,KAAK,QAAmB,MAAM;;;AAMlD,OAAM,MAAOC,YAAY;EACvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EACxB;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,0CAA0C,CAAC,CACtEC,IAAI,CACHN,KAAK,CAAC,IAAI,CAAC,EACXD,UAAU,CAAC,IAAI,CAACQ,YAAY,CAAC,CAC9B;EACL;EAEQA,YAAYA,CAACC,KAAwB;IAC3C,OAAOC,UAAU,CAAC,MAAMD,KAAK,CAACE,OAAO,CAAC;EACxC;EAAC,QAAAC,CAAA,G;qBAdUV,YAAY,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZf,YAAY;IAAAgB,OAAA,EAAZhB,YAAY,CAAAiB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}