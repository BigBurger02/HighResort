{"ast":null,"code":"import { catchError, delay, retry, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport class RoomsService {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n  }\n  getAll() {\n    return this.http.get('https://localhost:7112/api/Rooms').pipe(delay(2000), retry(2), catchError(this.errorHandler.bind(this)));\n  }\n  errorHandler(error) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n  static #_ = this.ɵfac = function RoomsService_Factory(t) {\n    return new (t || RoomsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RoomsService,\n    factory: RoomsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","delay","retry","throwError","RoomsService","constructor","http","errorService","getAll","get","pipe","errorHandler","bind","error","handle","message","_","i0","ɵɵinject","i1","HttpClient","i2","ErrorService","_2","factory","ɵfac","providedIn"],"sources":["/Users/macbook/App/repos/HiRes/Client/src/app/services/rooms.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {HttpClient, HttpErrorResponse, HttpParams} from \"@angular/common/http\";\nimport {catchError, delay, Observable, retry, throwError} from \"rxjs\";\nimport {IRoom} from \"../models/room\";\nimport {ErrorService} from \"./error.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomsService {\n  constructor(\n    private http: HttpClient,\n    private errorService: ErrorService\n  ) { }\n\n  getAll(): Observable<IRoom[]>{\n    return this.http.get<IRoom[]>('https://localhost:7112/api/Rooms')\n      .pipe(\n        delay(2000),\n        retry(2),\n        catchError(this.errorHandler.bind(this))\n      )\n  }\n\n  private errorHandler(error: HttpErrorResponse){\n    this.errorService.handle(error.message)\n    return throwError(() => error.message)\n  }\n\n  // queryStringExample1(): Observable<IRoom[]>{\n  //   return this.http.get<IRoom[]>('https://localhost:7112/api/Room', {\n  //     params: new HttpParams().append('limit', 5)\n  //   })\n  // }\n  // queryStringExample2(): Observable<IRoom[]>{\n  //   return this.http.get<IRoom[]>('https://localhost:7112/api/Room', {\n  //     params: new HttpParams({\n  //       fromString: 'limit=5'\n  //     })\n  //   })\n  // }\n  // queryStringExample3(): Observable<IRoom[]>{\n  //   return this.http.get<IRoom[]>('https://localhost:7112/api/Room', {\n  //     params: new HttpParams({\n  //       fromObject: {limit: 5}\n  //     })\n  //   })\n  // }\n}\n"],"mappings":"AAEA,SAAQA,UAAU,EAAEC,KAAK,EAAcC,KAAK,EAAEC,UAAU,QAAO,MAAM;;;;AAOrE,OAAM,MAAOC,YAAY;EACvBC,YACUC,IAAgB,EAChBC,YAA0B;IAD1B,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,YAAY,GAAZA,YAAY;EAClB;EAEJC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,kCAAkC,CAAC,CAC9DC,IAAI,CACHT,KAAK,CAAC,IAAI,CAAC,EACXC,KAAK,CAAC,CAAC,CAAC,EACRF,UAAU,CAAC,IAAI,CAACW,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC;EACL;EAEQD,YAAYA,CAACE,KAAwB;IAC3C,IAAI,CAACN,YAAY,CAACO,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC;IACvC,OAAOZ,UAAU,CAAC,MAAMU,KAAK,CAACE,OAAO,CAAC;EACxC;EAAC,QAAAC,CAAA,G;qBAlBUZ,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZnB,YAAY;IAAAoB,OAAA,EAAZpB,YAAY,CAAAqB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}